{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/WebstormProjects/ecommerce/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MessageBox from \"../components/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\n  const cart = useSelector(state = state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: [\"Cart is empty. \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 40\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 8\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/ubuntu/WebstormProjects/ecommerce/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","addToCart","useDispatch","useSelector","MessageBox","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","state","cartItems","dispatch","length","map","item","product"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACNC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADA,GAEV,CAFF;AAGA,QAAMC,IAAI,GAAGb,WAAW,CAACc,KAAK,GAAGA,KAAK,CAACD,IAAf,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcF,IAApB;AACA,QAAMG,QAAQ,GAAGjB,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,SAAJ,EAAe;AACXY,MAAAA,QAAQ,CAAClB,SAAS,CAACM,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACQ,QAAD,EAAWZ,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAKA,sBACG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKO,SAAS,CAACE,MAAV,KAAqB,CAArB,gBAAyB,QAAC,UAAD;AAAA,mDACP,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,gBAKO;AAAA,kBAEQF,SAAS,CAACG,GAAV,CAAeC,IAAD,iBACV;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAwBH;;GArCuBlB,U;UAKPF,W,EAEID,W;;;KAPGG,U","sourcesContent":["import React, {useEffect} from \"react\";\nimport {addToCart} from \"../actions/cartActions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MessageBox from \"../components/MessageBox\";\n\nexport default function CartScreen (props) {\n    const productId = props.match.params.id;\n    const qty = props.location.search\n        ? Number(props.location.search.split('=')[1])\n    : 1;\n    const cart = useSelector(state = state.cart);\n    const {cartItems} = cart;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty])\n    return (\n       <div className=\"row top\">\n           <div className=\"col-2\">\n               <h1>Shopping Cart</h1>\n               {cartItems.length === 0 ? <MessageBox>\n                   Cart is empty. <Link to=\"/\">Go Shopping</Link>\n               </MessageBox>\n               :\n                   (\n                       <ul>\n                           {\n                               cartItems.map((item) => (\n                                   <li key={item.product}>\n                                       <div className=\"row\">\n                                           \n                                       </div>\n                                   </li>\n                               ))\n                           }\n                       </ul>\n                   )}\n           </div>\n       </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}